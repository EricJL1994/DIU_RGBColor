
import java.util.ResourceBundle;





/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author usuario
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form RGBColor
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Autor = new javax.swing.JLabel();
        RInfo = new javax.swing.JLabel();
        GInfo = new javax.swing.JLabel();
        BInfo = new javax.swing.JLabel();
        RSlider = new javax.swing.JSlider();
        GSlider = new javax.swing.JSlider();
        BSlider = new javax.swing.JSlider();
        RValue = new javax.swing.JTextField();
        GValue = new javax.swing.JTextField();
        BValue = new javax.swing.JTextField();
        ColorField = new javax.swing.JTextField();
        RColor = new javax.swing.JTextField();
        GColor = new javax.swing.JTextField();
        BColor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Autor.setText("Autor: Éric Jordán López");

        RInfo.setText("R:");

        GInfo.setText("G:");

        BInfo.setText("B:");

        RSlider.setMaximum(255);
        RSlider.setValue(0);
        RSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RSliderStateChanged(evt);
            }
        });
        RSlider.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                RSliderMouseWheelMoved(evt);
            }
        });
        RSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RSliderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RSliderMouseExited(evt);
            }
        });

        GSlider.setMaximum(255);
        GSlider.setValue(0);
        GSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GSliderStateChanged(evt);
            }
        });
        GSlider.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                GSliderMouseWheelMoved(evt);
            }
        });
        GSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GSliderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GSliderMouseExited(evt);
            }
        });

        BSlider.setMaximum(255);
        BSlider.setValue(0);
        BSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BSliderStateChanged(evt);
            }
        });
        BSlider.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                BSliderMouseWheelMoved(evt);
            }
        });
        BSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BSliderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BSliderMouseExited(evt);
            }
        });

        RValue.setEditable(false);
        RValue.setText("0");

        GValue.setEditable(false);
        GValue.setText("0");

        BValue.setEditable(false);
        BValue.setText("0");

        ColorField.setEditable(false);
        ColorField.setBackground(new java.awt.Color(0, 0, 0));
        ColorField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ColorField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ColorField.setMaximumSize(new java.awt.Dimension(50, 50));
        ColorField.setMinimumSize(new java.awt.Dimension(50, 50));
        ColorField.setPreferredSize(new java.awt.Dimension(100, 108));

        RColor.setBackground(new java.awt.Color(0, 0, 0));
        RColor.setMaximumSize(new java.awt.Dimension(20, 20));
        RColor.setMinimumSize(new java.awt.Dimension(20, 20));
        RColor.setPreferredSize(new java.awt.Dimension(20, 20));

        GColor.setBackground(new java.awt.Color(0, 0, 0));
        GColor.setMaximumSize(new java.awt.Dimension(20, 20));
        GColor.setMinimumSize(new java.awt.Dimension(20, 20));
        GColor.setPreferredSize(new java.awt.Dimension(20, 20));

        BColor.setBackground(new java.awt.Color(0, 0, 0));
        BColor.setMaximumSize(new java.awt.Dimension(20, 20));
        BColor.setMinimumSize(new java.awt.Dimension(20, 20));
        BColor.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Autor)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GInfo)
                            .addComponent(BInfo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RValue, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(GValue)
                    .addComponent(BValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(ColorField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(RSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(GSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(GValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(GColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(BSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(ColorField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(Autor)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RSliderStateChanged
        Integer i = RSlider.getValue();
        RValue.setText(i.toString());
        ColorField.setBackground(new java.awt.Color(i, ColorField.getBackground().getGreen(), ColorField.getBackground().getBlue()));
        RColor.setBackground(new java.awt.Color(i, 0, 0));
        ColorField.setForeground(new java.awt.Color(255-i, 0, 0));
    }//GEN-LAST:event_RSliderStateChanged

    private void GSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GSliderStateChanged
        Integer i = GSlider.getValue();
        GValue.setText(i.toString());
        ColorField.setBackground(new java.awt.Color(ColorField.getBackground().getRed(), i, ColorField.getBackground().getBlue()));
        GColor.setBackground(new java.awt.Color(0, i, 0));
        ColorField.setForeground(new java.awt.Color(0, 255-i, 0));
    }//GEN-LAST:event_GSliderStateChanged

    private void BSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BSliderStateChanged
        Integer i = BSlider.getValue();
        BValue.setText(i.toString());
        ColorField.setBackground(new java.awt.Color(ColorField.getBackground().getRed(), ColorField.getBackground().getGreen(), i));
        BColor.setBackground(new java.awt.Color(0, 0, i));
        ColorField.setForeground(new java.awt.Color(0, 0, 255-i));
    }//GEN-LAST:event_BSliderStateChanged

    private void RSliderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSliderMouseEntered
        ColorField.setText("Dentro");
        ColorField.setForeground(new java.awt.Color(255-RSlider.getValue(), 0, 0));
    }//GEN-LAST:event_RSliderMouseEntered

    private void GSliderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GSliderMouseEntered
        ColorField.setText("Dentro");
        ColorField.setForeground(new java.awt.Color(0, 255-GSlider.getValue(), 0));
    }//GEN-LAST:event_GSliderMouseEntered

    private void BSliderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BSliderMouseEntered
        ColorField.setText("Dentro");
        ColorField.setForeground(new java.awt.Color(0, 0, 255-BSlider.getValue()));
    }//GEN-LAST:event_BSliderMouseEntered

    private void RSliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSliderMouseExited
        ColorField.setText("");
    }//GEN-LAST:event_RSliderMouseExited

    private void GSliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GSliderMouseExited
        ColorField.setText("");
    }//GEN-LAST:event_GSliderMouseExited

    private void BSliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BSliderMouseExited
        ColorField.setText("");
    }//GEN-LAST:event_BSliderMouseExited

    private void RSliderMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_RSliderMouseWheelMoved
        int wheelrotations = evt.getWheelRotation();
        RSlider.setValue(RSlider.getValue()-5*wheelrotations);
    }//GEN-LAST:event_RSliderMouseWheelMoved

    private void GSliderMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_GSliderMouseWheelMoved
        int wheelrotations = evt.getWheelRotation();
        GSlider.setValue(GSlider.getValue()-5*wheelrotations);
    }//GEN-LAST:event_GSliderMouseWheelMoved

    private void BSliderMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_BSliderMouseWheelMoved
        int wheelrotations = evt.getWheelRotation();
        BSlider.setValue(BSlider.getValue()-5*wheelrotations);
    }//GEN-LAST:event_BSliderMouseWheelMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Autor;
    private javax.swing.JTextField BColor;
    private javax.swing.JLabel BInfo;
    private javax.swing.JSlider BSlider;
    private javax.swing.JTextField BValue;
    private javax.swing.JTextField ColorField;
    private javax.swing.JTextField GColor;
    private javax.swing.JLabel GInfo;
    private javax.swing.JSlider GSlider;
    private javax.swing.JTextField GValue;
    private javax.swing.JTextField RColor;
    private javax.swing.JLabel RInfo;
    private javax.swing.JSlider RSlider;
    private javax.swing.JTextField RValue;
    // End of variables declaration//GEN-END:variables
}
